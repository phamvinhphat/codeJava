


import java.io.UnsupportedEncodingException;
import java.util.*;

import javax.swing.JButton;

import java.awt.*;
import java.awt.event.*;
/*
 * co caro
 */
public class caro {
	static String a[][] = new String[6][6];
	private JButton b[][] = new JButton[6][6];

	/*
	 * ban co 5x5
	 */
	public static void create_board() {
		for (int i = 1; i < 6; i++) {
			for (int j = 1; j < 6; j++) {
				a[i][j] = "-";
			}
		}
	}

	/*
	 * duy chuyen cua co
	 */
	public static void inputCaro(int row, int clumn, String n) {
			a[row][clumn] = n;
	}
	
	
	/*
	 * xuat ban co 5x5
	 */
	public static void output() {
		for (int i = 1; i < 6; i++) {
			for (int j = 1; j < 6; j++) {
				System.out.print(" " + a[i][j]);
				
			}
			System.out.println("\n");
		}
	}

	
	
	/*
	 * Kiem tra dieu kien de duy chuyen cua ban co
	 */
	public static boolean is_legal_move(int row, int column, String n) {
		if (row < 6 && column < 6) {
			
			if(n.equalsIgnoreCase("X") || n.equalsIgnoreCase("O")) {
					if (a[row][column] == "-") {
							return true;
					}
			}
			System.out.println("\n" + row + "  " + column);
		}
		if (row == 0 || column == 0) {
			return false;
		}
		return false;
	}

	/*
	 * kiem tra co hop phap ko de thuc hien viec di chuyen
	 *
	 */
	public static void make_move(int row, int column, String n) {
		boolean bl = is_legal_move(row, column,n);
		if (bl == true) {
			System.out.print("\ndi chuyen hop phap \n");
			inputCaro(row, column, n);
			System.out.println("\n---------------");
			System.out.println("\nSau khi di chuyen \n ");
			output();
			System.out.println("\n---------------");
		} else {
			System.out.print("\n!!!! di chuyen (Ten) khong hop phap !!!!\n");
			System.out.println("\n---------------");
		}
	}
	
	


	

	 // code ( dieu kien thang ) b
	  
//		public static boolean Xb_win() {
//			int[] n = new int[5];
//			int[] k = new int[5];
//			int l = 0;
//			int h = 0;
//			for (int i = 1; i < 6; i++) {
//				for (int j = 1; j < 6; j++) {
//					if (a[i][j].equalsIgnoreCase("X") ) {
//						n[l++] = i;
//						k[h++] = j;
//					}
//				}
//			}
//			if( n[0] == n[1] && n[0] == n[2] && n[0] == n[3] && n[0] == n[4] &&
//				n[1] == n[2] && n[1] == n[3] && n[1] == n[4] &&
//				n[2] == n[3] && n[2] == n[4] &&
//				n[3] == n[4] ) {
//					return true;
//			}
//				
//			if(	k[0] == k[1] && k[0] == k[2] && k[0] == k[3] && k[0] == k[4] &&
//				k[1] == k[2] && k[1] == k[3] && k[1] == k[4] &&
//				k[2] == k[3] && k[2] == k[4] &&
//				k[3] == k[4] ) {
//					return true;
//				}
//			return false;
//		}
		
	
	/*
	 * Dieu kien khi X thang 
	 */

//	public static boolean X_win() {
//		int n = 0;
//		int k = 0;
//		for (int i = 1; i < 6; i++) {
//			for (int j = 1; j < 6; j++) {
//				if (a[i][j].equalsIgnoreCase("X")) {
//					n = n + i;
//					k = k + j;
//					if (n / 5 == i || k / 5 == j) {
//						return true;
//					}
//				}
//			}
//		}
//
//		return false;
//	}

	/*
	 * Dieu kien khi O thang
	 */
//	public static boolean O_win() {
//		int n1 = 0;
//		int k1 = 0;
//		for (int i = 1; i < 6; i++) {
//			for (int j = 1; j < 6; j++) {
//				if (a[i][j].equalsIgnoreCase("O")) {
//					k1 = k1 + j;
//					n1 = n1 + i;
//					if (n1 / 5 == i || k1 / 5 == j) {
//						return true;
//					}
//				}
//			}
//		}
//		return false;
//	}
	
	
	// khi dannh o dau thi tim kiem tren dong do neu dong hay cot no co du 5 cai X thi xuat re
	// co the dung mot bien tam kieu int de ++ no len khi nao dat toi 5 thi true.
	public static boolean checkWin(int i, int j) throws UnsupportedEncodingException {
		int d = 0, k = i, d2 = 0, k2 = j;
		
		// so cot 
	//	System.out.print("\no ngoai\ni : "+i+"\nk :"+k+"\nj : "+j);
		while (k < i+1 && a[k][j].equalsIgnoreCase(a[i][j]) ) {
	//		System.out.print("\no trong 1a i :"+i+"\nk : "+k+"\nj : "+j);
			d++;
			k++;
	//		System.out.print("\no trong 1b \n i :"+i+"\nk : "+k+"\nj : "+j+"\nd : "+ d );
		}
		
		k= i-1;
	//	System.out.print("\no ngoai 2 : \ni : "+i+"\nj : "+j+"\nk : "+k);
		
			while( k!=0 && a[k][j].equalsIgnoreCase(a[i][j]) ) {
	//		System.out.print("\n o trong 2a\n i : "+i+"\nk : "+k+"\nj : "+j);
			d++;
			k--;
	//		System.out.print("\no trong 2b \ni : "+i+"\nk : "+k+"\nj : "+j+"\nd : "+d);
			}
	//	System.out.println("\n---------\n1d : "+d);
		
		if(d > 4 ) {
	//		System.out.println(" X true");
			return true;
		}
		
		// so hang
		while(k2<j+1 && a[i][k2].equalsIgnoreCase(a[i][k2])) {
			d2++;
			k2++;
		}
		k2 = j-1;
		while(k2 != 0 && a[i][k2].equalsIgnoreCase(a[i][k2]) ) {
			d2++;
			k2--;
		}
		if(d2 > 4) {
			return true;
		}
		
	//	System.out.println("false");
		return false;
	}
	
	

	public static void main(String args[]) throws UnsupportedEncodingException {
		Scanner sc = new Scanner(System.in);
		byte chon;

		
		
		do {
			System.out.println("\n1: xuat bang ");
			System.out.println("\n2: duy chuyen ");
			System.out.print("Chon buoc : ");
			chon = sc.nextByte();
			switch (chon) {
			case 1:
				create_board();
				output();
				break;

			case 2:
				System.out.println("\n---------------");
				System.out.print("\nNhap so hang :");
				int sh = sc.nextInt();
				System.out.print("So cot : ");
				int soc = sc.nextInt();
				System.out.print("Nhap ten : ");
				sc.nextLine();
				String w = sc.nextLine();
				System.out.println("\n---------------");
				System.out.print("\nKIEM TRA : ");
				make_move(sh, soc, w);
//				if (X_win() == true) {
//					System.out.println("X Thang ");
//					chon = 0;
//				}
//				if (O_win() == true) {
//					System.out.println("O Thang ");
//					chon = 0;
//				}
				if(checkWin(sh,soc) == true) {
					System.out.print(" thang  ");
					chon = 0 ;
				}
				break;

			default:
				chon = 0;
				break;
			}
		} while (chon != 0);
		sc.close();
	}
}